on:
    push:
        branches: [master]
jobs:
    build:
        runs-on: windows-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v3
          
        - name: Setup .Net
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '7.0'

        - name: Navigate to Workspace
          run: cd $GITHUB_WORKSPACE

        - name: Get version
          id: versionReader
          run: |
            set /p Version=<Version.txt
            echo ::set-output name=VERSION::%Version%
          
        - name: Restore Solution
          run: dotnet restore LuteBot.sln
          
        - name: Restore Packages
          run: nuget restore LuteBot.sln

        - name: Build Solution
          run: dotnet build LuteBot.sln --configuration Release --no-restore

        - name: Archive Release
          uses: thedoctor0/zip-release@0.7.1
          with:
            type: 'zip'
            filename: LuteBot${{steps.versionReader.outputs.VERSION}}.zip
            path: 'LuteBot/bin/Release/net7.0-windows'
            exclusions: '*.git* /*node_modules/* .editorconfig *.application'

        - name: Create github Release
          id: create_release
          uses: actions/create-release@v1
          env: 
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with: 
              tag_name: v${{ steps.versionReader.outputs.VERSION }}
              release_name: LuteBot v${{ steps.versionReader.outputs.VERSION }}
              draft: true
              prerelease: false
        - name: Upload release
          uses: actions/upload-release-asset@v1.0.1
          env: 
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with: 
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: LuteBot${{steps.versionReader.outputs.VERSION}}.zip
              asset_name: LuteBot${{steps.versionReader.outputs.VERSION}}.zip
              asset_content_type: application/zip
        - name: Publish release
          uses: eregon/publish-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            release_id: ${{ steps.create_release.outputs.id }}
