on:
    push:
        branches: [master]
         
jobs:
    build:
        if: endsWith(github.event.push.head_commit.message,"+patch") || endsWith(github.event.push.head_commit.message,"+minor") endsWith(github.event.push.head_commit.message,"+major")
        runs-on: windows-2019
        steps:
        
        - name: Get Current Release
          id: get_current_release
          uses: joutvhu/get-release@v1
          with:
            throwing: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
        - name: Semantic version from string
          id: sem_ver
          uses: Steffo99/actions-semver@v0.3.4
          with:
            string: ${{ steps.get_current_release.outputs.tag_name }} #May need to trim the v
            
            
        - name: Get patch tag from semver
          id: version_tag_patch
          run: echo "::set-output name=version::${{ steps.sem_ver.outputs.major }}.${{ steps.sem_ver.outputs.minor }}.$(${{ steps.sem_ver.outputs.patch }}+1)"
          
        - name: Get minor tag from semver
          id: version_tag_minor
          run: echo "::set-output name=version::${{ steps.sem_ver.outputs.major }}.$(${{ steps.sem_ver.outputs.minor }}+1).${{ steps.sem_ver.outputs.patch }}"
          
        - name: Get major tag from semver
          id: version_tag_major
          run: echo "::set-output name=version::${{ steps.sem_ver.outputs.major }}.$(${{ steps.sem_ver.outputs.minor }}+1).${{ steps.sem_ver.outputs.patch }}"
          
        
        - name: Checkout
          uses: actions/checkout@v2
          
          
        - name: Update files for patch
          if: endsWith(github.event.push.head_commit.message,"+patch")
          uses: jacobtomlinson/gha-find-replace@v2
          with:
            find: |
              "(public static string GetVersion\(\)
              [\s]*{
              [\s]*return ")[0-9]+\.[0-9]+\.[0-9]+(";
              [\s]*})"
            replace: "$1${{ steps.version_tag_patch.outputs.version }}$2"
            include: "LuteBot/Config/ConfigManager.cs"
          
        - name: Push changes
          uses: ad-m/github-push-action@v0.6.0
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.ref }}

        - name: Setup MSBuild
          uses: microsoft/setup-msbuild@v1

        - name: Setup NuGet
          uses: NuGet/setup-nuget@v1.0.5

        - name: Navigate to Workspace
          run: cd $GITHUB_WORKSPACE

        - name: Get version
          id: getv
          run: echo "::set-output name=version::$(Get-Content Version.txt)"

           
        - name: Create Code Signing Certificate
          run: |
            New-Item -ItemType directory -Path certificate
            Set-Content -Path certificate\certificate.txt -Value '${{ secrets.SIGNINGKEY }}'
            certutil -decode certificate\certificate.txt certificate\certificate.pfx

        - name: Restore Packages
          run: nuget restore LuteBot.sln

        - name: Build Solution
          run: |
            echo Version: ${{ steps.getv.outputs.version }}
            msbuild.exe LuteBot.sln /p:platform="Any CPU" /p:configuration="Release"
            
        - name: Code Sign SimpleML
          run: |
            & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe' sign /f certificate\certificate.pfx /p '${{ secrets.CERTIFICATE_PASS }}' /t http://timestamp.comodoca.com/authenticode LuteBot\bin\Release\lib\SimpleML.dll
            
        - name: Code Sign LuteBot
          run: |
            & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe' sign /f certificate\certificate.pfx /p '${{ secrets.CERTIFICATE_PASS }}' /t http://timestamp.comodoca.com/authenticode LuteBot\bin\Release\LuteBot.exe

        - name: Code Sign Updater
          run: |
            & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe' sign /f certificate\certificate.pfx /p '${{ secrets.CERTIFICATE_PASS }}' /t http://timestamp.comodoca.com/authenticode LuteBot\bin\Release\LuteBotUpdater.exe

        - name: Zip Solution
          uses: thedoctor0/zip-release@main
          with:
            directory: LuteBot/bin/Release
            type: zip
            filename: "./LuteBot.${{ steps.getv.outputs.version }}.zip"
            exclusions: "*.pdb /app.publish/* *.application"

        - name: Create github Release
          id: create_release
          uses: actions/create-release@v1
          env: 
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with: 
              tag_name: v${{ steps.getv.outputs.version }}
              release_name: LuteBot v${{ steps.getv.outputs.version }}
              draft: true
              prerelease: false
              body_path: ReleaseNotes.txt
        - name: Upload release
          uses: actions/upload-release-asset@v1.0.1
          env: 
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with: 
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: LuteBot/bin/Release/LuteBot.${{ steps.getv.outputs.version }}.zip
              asset_name: LuteBot.${{ steps.getv.outputs.version }}.zip
              asset_content_type: application/zip


